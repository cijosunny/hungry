<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:camel="http://camel.apache.org/schema/spring"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	       http://www.springframework.org/schema/context
	       http://www.springframework.org/schema/context/spring-context-3.0.xsd
	       http://www.springframework.org/schema/aop
	       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		   http://www.springframework.org/schema/jdbc 
		   http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd	   
		   http://camel.apache.org/schema/spring 
		   http://camel.apache.org/schema/spring/camel-spring.xsd     
	       http://www.springframework.org/schema/tx
	       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd">

	<context:component-scan base-package="org.hni" />
	
	<bean id="log4jInitializer"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass" value="org.springframework.util.Log4jConfigurer" />
		<property name="targetMethod" value="initLogging" />
		<property name="arguments">
			<list>
				<value>classpath:log4j.properties</value>
			</list>
		</property>
	</bean>

	<util:properties id="hniProperties" location="classpath:application.properties" />

	<!-- Create an embedded database to run with tests -->
	<jdbc:embedded-database id="dataSource" type="H2">
		<jdbc:script location="classpath:hsql/schema.sql" />
		<jdbc:script location="classpath:hsql/test-data.sql" />
	</jdbc:embedded-database>

	<!-- Add JPA support -->
	<bean id="emf"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		p:dataSource-ref="dataSource">
		<property name="packagesToScan" value="org.hni" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect" />
				<property name="showSql" value="false" />
			</bean>
		</property>
	</bean>
	<!-- Add Transaction support -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="emf" />
	</bean>

	<!-- Use @Transaction annotations for managing transactions -->
	<tx:annotation-driven transaction-manager="transactionManager" />


	<bean id="activeMq" class="org.apache.activemq.camel.component.ActiveMQComponent">
		<property name="connectionFactory">
			<bean class="org.apache.activemq.ActiveMQConnectionFactory">
				<property name="brokerURL" value="vm://localhost?broker.persistent=false&amp;broker.useJmx=false"/>
			</bean>
		</property>
	</bean>

	<!-- Test routes -->
	<camel:camelContext>
		<camel:template id="template"/>
		<camel:route>
			<camel:from uri="direct:populateCustomer"/>
			<camel:to uri="mock:noop"/>
		</camel:route>
	</camel:camelContext>
</beans>