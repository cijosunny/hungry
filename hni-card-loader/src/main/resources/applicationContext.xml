<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p=" http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
           http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd">

	<context:annotation-config />
	<context:component-scan base-package="org.hni" />
	<import resource="dao.xml" />

	<bean id="log4jInitializer"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass" value="org.springframework.util.Log4jConfigurer" />
		<property name="targetMethod" value="initLogging" />
		<property name="arguments">
			<list>
				<value>classpath:log4j.properties</value>
			</list>
		</property>
	</bean>

	<!-- you MUST define a spring profile to activate in your Java env when 
		launching the servlet container e.g. -Dspring.profiles.active=local-dev -->
	<!-- this allows injection of values into the dataSource below -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations"
			value="classpath:application.properties" />
	</bean>
	<util:properties id="hniProperties"
		location="classpath:application.properties" />
<!-- 	<bean id="redisLockingService" class=" org.hni.order.service.RedisLockingService">
		<property name="configLocation" value="/config/production/redis-cache.json" />
	</bean>
 -->	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="poolName" value="springHikariCP" />
		<property name="connectionTestQuery" value="${dataSource.connectionTestQuery}" />
		<property name="dataSourceClassName" value="${dataSource.dataSourceClassName}" />
		<property name="maximumPoolSize" value="5" />

		<property name="dataSourceProperties">
			<props>
				<prop key="user">${dataSource.username}</prop>
				<prop key="password">${dataSource.password}</prop>
				<prop key="databaseName">${dataSource.databaseName}</prop>
				<prop key="portNumber">${dataSource.portNumber}</prop>
				<prop key="serverName">${dataSource.serverName}</prop>
			</props>
		</property>
	</bean>
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"
		destroy-method="close">
		<constructor-arg ref="hikariConfig" />
	</bean>

</beans>